#!/bin/bash
# FastLED JavaScript Linting Script (Node.js + ESLint - FAST!)

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}⚡ FastLED JavaScript Linting (Node.js + ESLint - FAST!)${NC}"

# Check if ESLint is installed
if [ ! -f ".js-tools/node_modules/.bin/eslint.cmd" ]; then
    echo -e "${RED}❌ ESLint not found. Run: uv run ci/setup-js-linting-fast.py${NC}"
    exit 1
fi

# Find JavaScript files in WASM platform
JS_FILES=$(find src/platforms/wasm -name "*.js" -type f 2>/dev/null)

if [ -z "$JS_FILES" ]; then
    echo -e "${YELLOW}⚠️  No JavaScript files found in src/platforms/wasm/${NC}"
    exit 0
fi

echo -e "${BLUE}Found JavaScript files:${NC}"
echo "$JS_FILES" | sed 's/^/  /'

# Create minimal fast config
cat > .js-tools/.eslintrc-fast.json << 'EOF'
{
  "env": {
    "browser": true,
    "es2022": true,
    "worker": true,
    "node": true
  },
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module"
  },
  "rules": {
    "no-debugger": "error",
    "no-eval": "error"
  }
}
EOF

# Run ESLint in fast mode (only critical issues)
echo -e "${BLUE}Running ESLint (fast mode - critical issues only)...${NC}"
cd .js-tools

if "./node_modules/.bin/eslint.cmd" --config .eslintrc-fast.json --no-inline-config ../src/platforms/wasm/compiler/*.js ../src/platforms/wasm/compiler/modules/*.js; then
    echo -e "${GREEN}✅ JavaScript fast linting completed successfully${NC}"
    echo -e "${YELLOW}💡 For comprehensive linting, use: bash ci/js/lint-js${NC}"
else
    echo -e "${RED}❌ JavaScript fast linting failed - critical issues found${NC}"
    exit 1
fi 
