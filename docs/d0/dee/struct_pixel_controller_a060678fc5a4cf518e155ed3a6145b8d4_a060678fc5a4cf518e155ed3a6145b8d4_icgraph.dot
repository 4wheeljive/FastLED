digraph "PixelController::scale"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="PixelController::scale",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Scale a value using the per-channel scale data."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="PixelController::advance\lAndLoadAndScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_a7b2c3f0de852388e61d6b788d24f1ede.html#a7b2c3f0de852388e61d6b788d24f1ede",tooltip="A version of loadAndScale() that advances the output data pointer without dithering."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="PixelController::advance\lAndLoadAndScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_a5ed1cdb992788946f8aa585e014491fa.html#a5ed1cdb992788946f8aa585e014491fa",tooltip="non-template alias of advanceAndLoadAndScale<0>()"];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="PixelController::loadAnd\lScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_a7f2b0c051d473813018715f1621ea259.html#a7f2b0c051d473813018715f1621ea259",tooltip="Loads, dithers, and scales a single byte for a given output slot and lane."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="PixelController::loadAnd\lScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_a2096cee6b377960ef21fbda622f08994.html#a2096cee6b377960ef21fbda622f08994",tooltip="Loads and scales a single byte for a given output slot and lane."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="PixelController::loadAnd\lScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_a4984f158bbc3b6c79ca16dd847fe67e1.html#a4984f158bbc3b6c79ca16dd847fe67e1",tooltip="non-template alias of loadAndScale<0>()"];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="DMXSerialController\l::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d0f/class_d_m_x_serial_controller_a861d9beed51cce6441b50398f1eabebf.html#a861d9beed51cce6441b50398f1eabebf",tooltip="Send the LED data to the strip."];
  Node6 -> Node8 [id="edge7_Node000006_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="DMXSimpleController\l::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/da7/class_d_m_x_simple_controller_a6744d598f10ba5d97a57df08c46bafab.html#a6744d598f10ba5d97a57df08c46bafab",tooltip="Send the LED data to the strip."];
  Node6 -> Node9 [id="edge8_Node000006_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="LPD6803Controller::\lshowPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/d40/class_l_p_d6803_controller_a35f42384ada050146e6813f0fc766356.html#a35f42384ada050146e6813f0fc766356",tooltip="Send the LED data to the strip."];
  Node6 -> Node10 [id="edge9_Node000006_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="P9813Controller::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/dd6/class_p9813_controller_ab7381f0a1850d006f3449d27838b19c5.html#ab7381f0a1850d006f3449d27838b19c5",tooltip="Send the LED data to the strip."];
  Node6 -> Node11 [id="edge10_Node000006_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="AVRSoftwareSPIOutput\l::writePixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d57/class_a_v_r_software_s_p_i_output_a20772a8fdfa75015731375c36ccb3515.html#a20772a8fdfa75015731375c36ccb3515",tooltip="Write LED pixel data to the SPI interface."];
  Node6 -> Node12 [id="edge11_Node000006_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="REFHardwareSPIOutput\l::writePixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/dd4/class_r_e_f_hardware_s_p_i_output_a17c12dc926c86fc42b2f857149c699a1.html#a17c12dc926c86fc42b2f857149c699a1",tooltip="write a block of uint8_ts out in groups of three."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="PixelController::loadAnd\lScale1",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_a11f9b50f738c6d57d08d6776b3d8eb43.html#a11f9b50f738c6d57d08d6776b3d8eb43",tooltip="non-template alias of loadAndScale<1>()"];
  Node13 -> Node7 [id="edge13_Node000013_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node8 [id="edge14_Node000013_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node9 [id="edge15_Node000013_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node10 [id="edge16_Node000013_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node11 [id="edge17_Node000013_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node12 [id="edge18_Node000013_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge19_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="PixelController::loadAnd\lScale2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_a33c22b408cbc9eb8b9d98993fe985264.html#a33c22b408cbc9eb8b9d98993fe985264",tooltip="non-template alias of loadAndScale<2>()"];
  Node14 -> Node7 [id="edge20_Node000014_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node8 [id="edge21_Node000014_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node9 [id="edge22_Node000014_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node10 [id="edge23_Node000014_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node11 [id="edge24_Node000014_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node12 [id="edge25_Node000014_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node15 [id="edge26_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="PixelController::loadAnd\lScale_APA102_HD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_a07853a147d535144f71b3f2640f4b0d5.html#a07853a147d535144f71b3f2640f4b0d5",tooltip=" "];
  Node15 -> Node16 [id="edge27_Node000015_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="APA102Controller::showPixels\lGammaBitShift",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d96/class_a_p_a102_controller_a040f761b3d3bb30a9275f96548ec5ef7.html#a040f761b3d3bb30a9275f96548ec5ef7",tooltip=" "];
  Node16 -> Node17 [id="edge28_Node000016_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="APA102Controller::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d96/class_a_p_a102_controller_a523f76b88c07e29cba6c40bd0cefe4b3.html#a523f76b88c07e29cba6c40bd0cefe4b3",tooltip="Send the LED data to the strip."];
  Node1 -> Node18 [id="edge29_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="PixelController::loadAnd\lScale_WS2816_HD",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_a052385f847c0e13b506fe7003320e907.html#a052385f847c0e13b506fe7003320e907",tooltip=" "];
  Node18 -> Node19 [id="edge30_Node000018_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="WS2816Controller::showPixels",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dbc/class_w_s2816_controller_a7d9891631bb3b4e35dcbb93180ac8a55.html#a7d9891631bb3b4e35dcbb93180ac8a55",tooltip="Send the LED data to the strip."];
  Node1 -> Node20 [id="edge31_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="PixelController::scale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_aad6f8ce8a3aa9429025e67050e312929.html#aad6f8ce8a3aa9429025e67050e312929",tooltip="Scale a value."];
  Node1 -> Node21 [id="edge32_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="PixelController::stepAdvance\lAndLoadAndScale0",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_acb4a76e70b987649e50290f68648e9d6.html#acb4a76e70b987649e50290f68648e9d6",tooltip="stepDithering() and advanceAndLoadAndScale0()"];
}
