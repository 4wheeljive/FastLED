digraph "fl::result::ok"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="fl::result::ok",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Check if the result is successful."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="fl::result::error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d6d/classfl_1_1result_a6659dd0a3e0580c716fe00e214b0f079.html#a6659dd0a3e0580c716fe00e214b0f079",tooltip="Get the error value."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="fl::result::result",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d6d/classfl_1_1result_aaa632b50087b0395d207c7a1498e3921.html#aaa632b50087b0395d207c7a1498e3921",tooltip="Construct an error result."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="fl::result::result",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d6d/classfl_1_1result_a8e9e1bb0b91d2c6ad30a6054e06bdcd4.html#a8e9e1bb0b91d2c6ad30a6054e06bdcd4",tooltip="Construct an error result (move)"];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="fl::result::error_message",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d6d/classfl_1_1result_addee698c009fb513a8b4ceafa05f611f.html#addee698c009fb513a8b4ceafa05f611f",tooltip="Get the error message as a convenience."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="test_await_approach",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d5/dec/_net_test_real_8h_a75e6549812ad7bff897e0c92a225878a.html#a75e6549812ad7bff897e0c92a225878a",tooltip=" "];
  Node5 -> Node8 [id="edge6_Node000005_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="test_json_await",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d5/dec/_net_test_real_8h_a648cd3d90f8e240cbbfe5cb934057124.html#a648cd3d90f8e240cbbfe5cb934057124",tooltip="APPROACH 4: JSON Response with await pattern   Same JSON handling but using await_top_level for synch..."];
  Node1 -> Node5 [id="edge7_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="fl::result::operator bool",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d6d/classfl_1_1result_a3dbe3a8472d34cf81aece88600bd8e04.html#a3dbe3a8472d34cf81aece88600bd8e04",tooltip="Boolean conversion operator (same as ok())"];
  Node1 -> Node6 [id="edge9_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge10_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node10 [id="edge11_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="fl::result::value",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d6d/classfl_1_1result_ad10496f22ba1916f67593fc4cb8bcdc2.html#ad10496f22ba1916f67593fc4cb8bcdc2",tooltip="Get the success value (mutable)"];
  Node1 -> Node11 [id="edge12_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="fl::result::value",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d6d/classfl_1_1result_a8c36716d4a5e21c2b42707c839305328.html#a8c36716d4a5e21c2b42707c839305328",tooltip="Get the success value (const)"];
  Node11 -> Node12 [id="edge13_Node000011_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="fl::result::result",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d6d/classfl_1_1result_acc690f602e9ff433fba4c01421d4071a.html#acc690f602e9ff433fba4c01421d4071a",tooltip="Construct a successful result."];
  Node11 -> Node13 [id="edge14_Node000011_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="fl::result::result",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dc/d6d/classfl_1_1result_a57861c36ebacc39d97c829d98cc09962.html#a57861c36ebacc39d97c829d98cc09962",tooltip="Construct a successful result (move)"];
  Node11 -> Node6 [id="edge15_Node000011_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node8 [id="edge16_Node000011_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
