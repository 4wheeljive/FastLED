digraph "scale"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="scale",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="DATA_NOP::adjust",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d8/d0d/class_d_a_t_a___n_o_p_a1b1d7c26545a8da0cad78828709d96e3.html#a1b1d7c26545a8da0cad78828709d96e3",tooltip="Hook called to adjust a byte of data before writing it to the output."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="ChangePaletteAndSettings\lPeriodically",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dda/_noise_plus_palette_8ino_a2985d4b1841f40d48227c9b68cdfd2e6.html#a2985d4b1841f40d48227c9b68cdfd2e6",tooltip=" "];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="loop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/dda/_noise_plus_palette_8ino_afe461d27b9c48d5921c00d521181f12f.html#afe461d27b9c48d5921c00d521181f12f",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CRGB::computeAdjustment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/d82/struct_c_r_g_b_a65e166b90fb7b4aecd2b26a987e312e3.html#a65e166b90fb7b4aecd2b26a987e312e3",tooltip="Calculates the combined color adjustment to the LEDs at a given scale, color correction,..."];
  Node5 -> Node6 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CLEDController::getAdjustment",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d6/d2c/class_c_l_e_d_controller_af6173cca91ee446766cc15102990d7bb.html#af6173cca91ee446766cc15102990d7bb",tooltip="Get the combined brightness/color adjustment for this controller."];
  Node1 -> Node10 [id="edge6_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="draw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/dac/_fx_noise_ring_8ino_a7a1cdb28d8d83f314435a3a1dc13f17f.html#a7a1cdb28d8d83f314435a3a1dc13f17f",tooltip=" "];
  Node10 -> Node11 [id="edge7_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="loop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d3/dac/_fx_noise_ring_8ino_afe461d27b9c48d5921c00d521181f12f.html#afe461d27b9c48d5921c00d521181f12f",tooltip=" "];
  Node1 -> Node12 [id="edge8_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="fill_noise16",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/da4/group___noise_fill_ga8bf5ab0f87a6bb79204754ef2a62f960.html#ga8bf5ab0f87a6bb79204754ef2a62f960",tooltip="Fill an LED array with random colors, using 16-bit noise."];
  Node1 -> Node13 [id="edge9_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="fill_noise8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/da4/group___noise_fill_ga7967fd7b1a7230a0f7428347c70dac3e.html#ga7967fd7b1a7230a0f7428347c70dac3e",tooltip="Fill an LED array with random colors, using 8-bit noise."];
  Node1 -> Node14 [id="edge10_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="fill_raw_2dnoise16into8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/da4/group___noise_fill_ga497fef3729e4bde5d8bd7d5c7ba2636f.html#ga497fef3729e4bde5d8bd7d5c7ba2636f",tooltip="Fill a 2D 8-bit buffer with noise, using inoise16()"];
  Node1 -> Node15 [id="edge11_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="fill_raw_noise16into8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/da4/group___noise_fill_ga9db885e8cd887367fbf17e70f7d6b7fd.html#ga9db885e8cd887367fbf17e70f7d6b7fd",tooltip="Fill a 1D 8-bit buffer with noise, using inoise16()"];
  Node15 -> Node12 [id="edge12_Node000015_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge13_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="fill_raw_noise8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/da4/group___noise_fill_ga1e4dba9289b03333697e70d4b7f3b006.html#ga1e4dba9289b03333697e70d4b7f3b006",tooltip="Fill a 1D 8-bit buffer with noise, using inoise8()"];
  Node16 -> Node12 [id="edge14_Node000016_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node13 [id="edge15_Node000016_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge16_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="FillNoise",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d6/d43/funky_8cpp_ad75910933b9f979e883c13b78798580b.html#ad75910933b9f979e883c13b78798580b",tooltip=" "];
  Node17 -> Node18 [id="edge17_Node000017_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="NoiseExample2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d43/funky_8cpp_a4b71fc2e5ba7e55bbd1e182783d826e9.html#a4b71fc2e5ba7e55bbd1e182783d826e9",tooltip=" "];
  Node1 -> Node27 [id="edge18_Node000001_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="fillnoise8",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d6/d43/funky_8cpp_a695b396822bbfb2d9b29c121cf13e8f3.html#a695b396822bbfb2d9b29c121cf13e8f3",tooltip=" "];
  Node1 -> Node6 [id="edge19_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node29 [id="edge20_Node000001_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="getPaletteIndex",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$dc/dfc/_fire_matrix_8ino_a593fb12ac1f018e17ad0f8ee5eeaa6ba.html#a593fb12ac1f018e17ad0f8ee5eeaa6ba",tooltip=" "];
  Node1 -> Node31 [id="edge21_Node000001_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="getPaletteIndex",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$df/d5c/_fire_cylinder_8ino_a617c5a2afa470899e1f864d74ff6506d.html#a617c5a2afa470899e1f864d74ff6506d",tooltip=" "];
  Node1 -> Node33 [id="edge22_Node000001_Node000033",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="HorizontalStream",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d6/d43/funky_8cpp_a783ae7fcc2f867e3c144e717b3d455c8.html#a783ae7fcc2f867e3c144e717b3d455c8",tooltip=" "];
  Node1 -> Node38 [id="edge23_Node000001_Node000038",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="PixelController::loadAnd\lScale",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/dee/struct_pixel_controller_a56fc5e5bf305e1760198c0a69ac85ff9.html#a56fc5e5bf305e1760198c0a69ac85ff9",tooltip="Loads, dithers, and scales a single byte for a given output slot, using class dither and scale values..."];
  Node1 -> Node69 [id="edge24_Node000001_Node000069",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node69 [id="Node000069",label="PixelController::loadAnd\lScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/dee/struct_pixel_controller_a73553caa10abdb91e454a27456fc14e5.html#a73553caa10abdb91e454a27456fc14e5",tooltip="Loads, dithers, and scales a single byte for a given output slot and lane, using class dither and sca..."];
  Node1 -> Node70 [id="edge25_Node000001_Node000070",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node70 [id="Node000070",label="loop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d05/_bilinear_compression_8ino_afe461d27b9c48d5921c00d521181f12f.html#afe461d27b9c48d5921c00d521181f12f",tooltip=" "];
  Node1 -> Node71 [id="edge26_Node000001_Node000071",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="fl::map_range_detail\l::map_range_math\< T,\l vec2\< V \> \>::map",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/d78/structfl_1_1map__range__detail_1_1map__range__math_3_01_t_00_01vec2_3_01_v_01_4_01_4_ab64887baf25c2991d5f61c9b219e3f0a.html#ab64887baf25c2991d5f61c9b219e3f0a",tooltip=" "];
  Node1 -> Node72 [id="edge27_Node000001_Node000072",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node72 [id="Node000072",label="Color3i::Mulf",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$de/d12/struct_color3i_a04acf7d63a029280c574586025b08d76.html#a04acf7d63a029280c574586025b08d76",tooltip=" "];
  Node1 -> Node73 [id="edge28_Node000001_Node000073",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node73 [id="Node000073",label="fl::nscale8",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d4/d36/namespacefl_ab90db73f2d846755d0b084e4af7af072.html#ab90db73f2d846755d0b084e4af7af072",tooltip=" "];
  Node1 -> Node79 [id="edge29_Node000001_Node000079",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node79 [id="Node000079",label="nscale8_LEAVING_R1\l_DIRTY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/da5/group___scaling_dirty_ga025b1e8d81032d15fe1ab500f804f3f2.html#ga025b1e8d81032d15fe1ab500f804f3f2",tooltip="In place modifying version of scale8() that does not clean up the R1 register on AVR."];
  Node1 -> Node80 [id="edge30_Node000001_Node000080",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node80 [id="Node000080",label="fl::nscale8_video",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d4/d36/namespacefl_af178e5cac12f46acad3eba87b0e96644.html#af178e5cac12f46acad3eba87b0e96644",tooltip=" "];
  Node1 -> Node83 [id="edge31_Node000001_Node000083",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node83 [id="Node000083",label="nscale8_video_LEAVING\l_R1_DIRTY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/da5/group___scaling_dirty_gadfd26d9b154f5ec79dbffe612dafd146.html#gadfd26d9b154f5ec79dbffe612dafd146",tooltip="In place modifying version of scale8_video() that does not clean up the R1 register on AVR."];
  Node83 -> Node84 [id="edge32_Node000083_Node000084",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node84 [id="Node000084",label="nscale8x2_video",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/da8/group___scaling_ga4204edd4a3f8aac7124a10f1f5cfccfe.html#ga4204edd4a3f8aac7124a10f1f5cfccfe",tooltip="Scale two one-byte values by a third one, which is treated as the numerator of a fraction whose demom..."];
  Node83 -> Node85 [id="edge33_Node000083_Node000085",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node85 [id="Node000085",label="nscale8x3_video",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/da8/group___scaling_ga700b7f510f32e8c91385093c436c27d9.html#ga700b7f510f32e8c91385093c436c27d9",tooltip="Scale three one-byte values by a fourth one, which is treated as the numerator of a fraction whose de..."];
  Node1 -> Node95 [id="edge34_Node000001_Node000095",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node95 [id="Node000095",label="nscale8x2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/da8/group___scaling_ga6f419761a744efed4bae8875ac07aef0.html#ga6f419761a744efed4bae8875ac07aef0",tooltip="Scale two one-byte values by a third one, which is treated as the numerator of a fraction whose demom..."];
  Node1 -> Node84 [id="edge35_Node000001_Node000084",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node96 [id="edge36_Node000001_Node000096",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node96 [id="Node000096",label="nscale8x3",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/da8/group___scaling_ga39bf87e5526120889086cab19ac749b1.html#ga39bf87e5526120889086cab19ac749b1",tooltip="Scale three one-byte values by a fourth one, which is treated as the numerator of a fraction whose de..."];
  Node1 -> Node113 [id="edge37_Node000001_Node000113",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node113 [id="Node000113",label="nscale8x3_constexpr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/da5/group___scaling_dirty_ga5591d68060be4809fc5f29a67bc9a01c.html#ga5591d68060be4809fc5f29a67bc9a01c",tooltip=" "];
  Node1 -> Node85 [id="edge38_Node000001_Node000085",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node114 [id="edge39_Node000001_Node000114",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node114 [id="Node000114",label="scale16",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/da8/group___scaling_ga1ff8ac00ad78e22acc7bb7445bfdb145.html#ga1ff8ac00ad78e22acc7bb7445bfdb145",tooltip="Scale a 16-bit unsigned value by an 16-bit value, which is treated as the numerator of a fraction who..."];
  Node1 -> Node137 [id="edge40_Node000001_Node000137",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node137 [id="Node000137",label="scale16by8",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/da8/group___scaling_gaa51d5b048c2a4a20a00bddcdc257daaf.html#gaa51d5b048c2a4a20a00bddcdc257daaf",tooltip="Scale a 16-bit unsigned value by an 8-bit value, which is treated as the numerator of a fraction whos..."];
  Node1 -> Node148 [id="edge41_Node000001_Node000148",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node148 [id="Node000148",label="scale8",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/da8/group___scaling_gad7535ccda9c92470c4e6ee0265585555.html#gad7535ccda9c92470c4e6ee0265585555",tooltip="Scale one byte by a second one, which is treated as the numerator of a fraction whose denominator is ..."];
  Node148 -> Node2 [id="edge42_Node000148_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node228 [id="edge43_Node000001_Node000228",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node228 [id="Node000228",label="scale8_constexpr",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/da8/group___scaling_ga69ac566473d0da1e05d29d8ad27be8d4.html#ga69ac566473d0da1e05d29d8ad27be8d4",tooltip=" "];
  Node1 -> Node230 [id="edge44_Node000001_Node000230",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node230 [id="Node000230",label="scale8_LEAVING_R1_DIRTY",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/da5/group___scaling_dirty_ga7386235cada3aca429b189681d2ec56d.html#ga7386235cada3aca429b189681d2ec56d",tooltip="This version of scale8() does not clean up the R1 register on AVR."];
  Node230 -> Node95 [id="edge45_Node000230_Node000095",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node230 -> Node96 [id="edge46_Node000230_Node000096",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node252 [id="edge47_Node000001_Node000252",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node252 [id="Node000252",label="scale8_video",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/da8/group___scaling_ga628b417ea1507e3447cdf5f308d9b6d5.html#ga628b417ea1507e3447cdf5f308d9b6d5",tooltip="The \"video\" version of scale8() guarantees that the output will be only be zero if one or both of the..."];
  Node1 -> Node257 [id="edge48_Node000001_Node000257",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node257 [id="Node000257",label="scale8_video_LEAVING\l_R1_DIRTY",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d0/da5/group___scaling_dirty_gaf8e0821f34434cd6bfed4a16a895da23.html#gaf8e0821f34434cd6bfed4a16a895da23",tooltip="This version of scale8_video() does not clean up the R1 register on AVR."];
  Node1 -> Node259 [id="edge49_Node000001_Node000259",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node259 [id="Node000259",label="MidiInterface::sendPitchBend",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/db2/group__output_gaaaf16c1334640e690ecbd835d645e4cb.html#gaaaf16c1334640e690ecbd835d645e4cb",tooltip="Send a Pitch Bend message using a floating point value."];
  Node1 -> Node260 [id="edge50_Node000001_Node000260",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node260 [id="Node000260",label="CFastLED::setBrightness",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dbb/class_c_fast_l_e_d_a730ba7d967e882b4b893689cf333b2eb.html#a730ba7d967e882b4b893689cf333b2eb",tooltip="Set the global brightness scaling."];
  Node1 -> Node261 [id="edge51_Node000001_Node000261",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node261 [id="Node000261",label="fl::XYPath::setScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d9/df4/classfl_1_1_x_y_path_a7de90d4c69e50cbb44f136f01b91336d.html#a7de90d4c69e50cbb44f136f01b91336d",tooltip=" "];
  Node1 -> Node262 [id="edge52_Node000001_Node000262",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node262 [id="Node000262",label="fl::XYPathRenderer\l::setScale",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/dbc/classfl_1_1_x_y_path_renderer_a8a61c55f3e7844d4f2a80aa88ccd61de.html#a8a61c55f3e7844d4f2a80aa88ccd61de",tooltip=" "];
  Node1 -> Node263 [id="edge53_Node000001_Node000263",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node263 [id="Node000263",label="fl::FxEngine::setSpeed",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d4/d60/classfl_1_1_fx_engine_a2c54519d9eb20c6ecd3e1ce0fda02136.html#a2c54519d9eb20c6ecd3e1ce0fda02136",tooltip="Sets the speed of the fx engine, which will impact the speed of all effects."];
  Node1 -> Node264 [id="edge54_Node000001_Node000264",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node264 [id="Node000264",label="setup",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d7/dd3/wasm_8ino_a4fc01d736fe50cf5b977f755b675f11d.html#a4fc01d736fe50cf5b977f755b675f11d",tooltip=" "];
  Node1 -> Node265 [id="edge55_Node000001_Node000265",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node265 [id="Node000265",label="CFastLED::show",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$dd/dbb/class_c_fast_l_e_d_a83afdd1e2a21f33ac4f8d2610d6e331b.html#a83afdd1e2a21f33ac4f8d2610d6e331b",tooltip="Update all our controllers with the current led colors, using the passed in brightness."];
  Node1 -> Node266 [id="edge56_Node000001_Node000266",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node266 [id="Node000266",label="CFastLED::showColor",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$dd/dbb/class_c_fast_l_e_d_a7315b060d295bad5fbd32e50eaaf02b0.html#a7315b060d295bad5fbd32e50eaaf02b0",tooltip="Set all leds on all controllers to the given color/scale."];
  Node1 -> Node268 [id="edge57_Node000001_Node000268",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node268 [id="Node000268",label="animartrix_detail::\lANIMartRIX::SM10",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d5e/classanimartrix__detail_1_1_a_n_i_mart_r_i_x_a4f01f58744558bcde657028dcee6a6a6.html#a4f01f58744558bcde657028dcee6a6a6",tooltip=" "];
  Node1 -> Node269 [id="edge58_Node000001_Node000269",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node269 [id="Node000269",label="VerticalStream",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d6/d43/funky_8cpp_aebee3bb473221f38fb66a956dd5f73db.html#aebee3bb473221f38fb66a956dd5f73db",tooltip=" "];
}
