digraph "CRGBPalette32::operator="
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CRGBPalette32::operator=",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Create upscaled palette from 16-entry palette."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CRGBPalette32::CRGBPalette32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$df/d3d/class_c_r_g_b_palette32_a16ee6e53d011977f8cee52df0c6c58b7.html#a16ee6e53d011977f8cee52df0c6c58b7",tooltip="Default constructor."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="UpscalePalette",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d6/d0a/group___palette_upscale_gaa88523d1afb29cf3f75b9b2725ba55d3.html#gaa88523d1afb29cf3f75b9b2725ba55d3",tooltip="Convert a 16-entry palette to a 256-entry palette."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="ColorFromPalette",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d2/d73/group___palette_colors_gac46e65aff3dd6519b33e27f0998f17cd.html#gac46e65aff3dd6519b33e27f0998f17cd",tooltip="Get a color from a palette."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="blend",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$dc/db8/group___color_blends_ga4f06b4423f71f77346aaf5dabe7dd05c.html#ga4f06b4423f71f77346aaf5dabe7dd05c",tooltip="Computes a new color blended some fraction of the way between two other colors."];
  Node4 -> Node8 [id="edge5_Node000004_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="cleanup_R1",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/da5/group___scaling_dirty_ga3fade00fb4cf5b937b973128198a7a79.html#ga3fade00fb4cf5b937b973128198a7a79",tooltip="Clean up the r1 register after a series of *LEAVING_R1_DIRTY calls."];
  Node4 -> Node10 [id="edge6_Node000004_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="lsrX4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$da/d2d/colorutils_8cpp_ab445fd8641e95a3bbd1417d9783f6170.html#ab445fd8641e95a3bbd1417d9783f6170",tooltip="Helper function to divide a number by 16, aka four logical shift right (LSR)'s."];
  Node4 -> Node11 [id="edge7_Node000004_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="map8",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$d6/d19/group___linear_interpolation_gaf65357c7aeca9778e5a2f80a6bac2b5d.html#gaf65357c7aeca9778e5a2f80a6bac2b5d",tooltip="Map from one full-range 8-bit value into a narrower range of 8-bit values, possibly a range of hues."];
  Node4 -> Node9 [id="edge8_Node000004_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="scale8_LEAVING_R1_DIRTY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$d0/da5/group___scaling_dirty_ga7386235cada3aca429b189681d2ec56d.html#ga7386235cada3aca429b189681d2ec56d",tooltip="This version of scale8() does not clean up the R1 register on AVR."];
}
