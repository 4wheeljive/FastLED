name: Build Template

on:
  workflow_call:
    inputs:
      board:
        type: string
        required: true
      max_size:
        type: number
        required: true


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV
        run: pip install uv

      - name: Compile Board
        run: uv run ci/compile.py --board ${{ inputs.board }} --examples Blink

      - name: Check Compiled Program Size for ${{ inputs.board }} is less than the limit of ${{ inputs.max_size }}
        run: |
          output=$(uv run ci/compiled_size.py --board ${{ inputs.board }})
          size=$(echo "$output" | sed -n 's/.*: *\([0-9]*\).*/\1/p')
          
          if [ $size -gt ${{ inputs.max_size }} ]; then
            echo "${{ inputs.board }} size $size is greater than max size ${{ inputs.max_size }}"
            echo "::error::Compiled size exceeds maximum allowed size"
            exit 1
          else
            echo "${{ inputs.board }} size $size is within the limit of ${{ inputs.max_size }}"
          fi

      - name: Inspect Binary
        continue-on-error: true
        run: |
          uv run ci/inspect_binary.py --first

      - name: Generate timestamp and random hex
        id: generate_id
        run: |
          echo "timestamp=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
          echo "random_hex=$(openssl rand -hex 3)" >> $GITHUB_OUTPUT

      - name: Upload build log
        uses: actions/upload-artifact@v4
        with:
          name: build-log-${{ steps.generate_id.outputs.timestamp }}-${{ github.sha }}-${{ steps.generate_id.outputs.random_hex }}
          path: build.log

      - name: Check build status
        if: failure()
        run: exit 1
