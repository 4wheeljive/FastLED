name: wasm

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV for python
        run: pip install uv

      - name: Compile fastled.js, fastled.wasm, and index.html
        run: |
          uv run ci/wasm_compile.py -b examples/wasm
        continue-on-error: ${{ matrix.os != 'ubuntu-latest' }}
        shell: bash

      - name: Scan for wasm/js/html artifacts
        run: |
          find . -name "*.wasm" -o -name "*.js" -o -name "*.html"
        continue-on-error: ${{ matrix.os != 'ubuntu-latest' }}

      - name: Check for required artifacts
        run: |
          cd examples/wasm/fastled_js
          if [ ! -f fastled.js ] || [ ! -f fastled.wasm ] || [ ! -f index.html ]; then
            echo "Error: One or more required files (fastled.js, fastled.wasm, index.html) are missing."
            exit 1
          fi
          echo "All required files are present."

      - name: Generate timestamp and random hex
        id: generate_id
        run: |
          echo "timestamp=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
          echo "random_hex=$(openssl rand -hex 3)" >> $GITHUB_OUTPUT

      - name: Upload wasm artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wasm-artifacts-${{ steps.generate_id.outputs.timestamp }}-${{ github.sha }}-${{ steps.generate_id.outputs.random_hex }}
          path: examples/wasm/fastled_js/*.*
          if-no-files-found: ${{ matrix.os == 'ubuntu-latest' && 'error' || 'ignore' }}

      - name: Install Playwright and verify FastLED_onFrame
        run: |
          uv run ci/wasm_test.py
        continue-on-error: ${{ matrix.os != 'ubuntu-latest' }}

