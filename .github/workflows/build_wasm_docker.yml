name: wasm_docker

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.5.0
        with:
          #key: docker-${{ runner.os }}-${{ hashFiles('src/**') }}
          key: docker-${{ runner.os }}
      
      - name: Install UV for python
        run: pip install uv

      - name: Compile fastled.js, fastled.wasm, and index.html
        run: uv run ci/wasm_compile.py -b examples/wasm
        shell: bash

      - name: Scan for wasm/js/html artifacts
        run: |
          find . -name "*.wasm" -o -name "*.js" -o -name "*.html"

      - name: Check for required artifacts
        run: |
          cd examples/wasm/fastled_js
          if [ ! -f fastled.js ] || [ ! -f fastled.wasm ] || [ ! -f index.html ]; then
            echo "Error: One or more required files (fastled.js, fastled.wasm, index.html) are missing."
            exit 1
          fi
          echo "All required files are present."

      - name: Generate timestamp and random hex
        id: generate_id
        run: |
          echo "timestamp=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
          echo "random_hex=$(openssl rand -hex 3)" >> $GITHUB_OUTPUT

      - name: Upload wasm artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wasm-artifacts-${{ steps.generate_id.outputs.timestamp }}-${{ github.sha }}-${{ steps.generate_id.outputs.random_hex }}
          path: examples/wasm/fastled_js/*.*
          if-no-files-found: error

      - name: Install Playwright and verify onFastLedFrame
        run: |
          npm init -y
          npm install playwright
          npm install http-server
          npx playwright install chromium
          npx http-server examples/wasm/fastled_js -p 8123 &
          node -e '
            const { chromium } = require("playwright");
            (async () => {
              const browser = await chromium.launch();
              const page = await browser.newPage();
              await page.goto("http://localhost:8123");
              await page.evaluate(() => {
                window.frameCallCount = 0;
                globalThis.onFastLedFrame = (jsonStr) => {
                  console.log("onFastLedFrame called with:", jsonStr);
                  window.frameCallCount++;
                };
              });
              await page.waitForTimeout(3000);
              const callCount = await page.evaluate(() => window.frameCallCount);
              if (callCount > 0) {
                console.log("Success: FastLED.js was initialized and called onFastLedFrame was called", callCount, "times");
              } else {
                console.error("Error: FastLED.js had something go wrong and onFastLedFrame was not called within 3 seconds");
                process.exit(1);
              }
              await browser.close();
            })();
          '
